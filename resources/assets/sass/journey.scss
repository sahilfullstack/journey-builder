// Fonts
@import url("https://fonts.googleapis.com/css?family=Quicksand:300,400,700");

// Variables
@import 'variables';

$font-family-sans-serif: "Quicksand", sans-serif;

@import "~bootstrap/scss/functions";
@import "~bootstrap/scss/variables";
@import "~bootstrap/scss/mixins";
@import "~bootstrap/scss/reboot";
@import "~bootstrap/scss/type";
@import "~bootstrap/scss/grid";
@import "~bootstrap/scss/buttons";
@import "~bootstrap/scss/button-group";
@import "~bootstrap/scss/utilities";
@import "~bootstrap/scss/card";
@import "~bootstrap/scss/bootstrap";


.row {
    // This overflow property stops the parent from stretching itself if the child is overflowing.
    overflow-x: hidden;
}

.noscroll {
    overflow: hidden;
}

html,body,div#app,section.main {
    width: 100%;
    height: 100%;
}

body {
    display: flex;
    flex-direction: column;
}

section.main {
    display: flex;
    flex: 1;
    overflow-y: auto;
    flex-direction: column;

    img#icon {
        width: 10rem;
        display: block;
        margin: 1rem auto;
        overflow: hidden;
    }

    .section {
        margin-top: 1rem;
        padding-top: 1rem;
        padding-bottom: 1rem;
        color: $gray-300;
        text-align: center;
        h5 {
            color: #000;
            font-weight: bold;
        }
        p {
            margin-bottom: 0;
        }
   }

    .progress {
        border-radius: 0;
        height: 0.5rem;
        margin-left: -15px;
        margin-right: -15px;
        .progress-bar{
            background: $accent;
        }
    }
}

.sidebar {
    position: fixed;
    top: 0;
    bottom: 0;
    display: flex;
    height: 100%;
    align-items: center;
}

.question {
    display: flex;
    align-items: center;
    height:100%;
    overflow-y: auto;
    overflow-x: hidden;
}

.node-area {
    height: 100%;
}


.navigator {
    overflow: hidden;

        .btn {
            height: 4rem;
            border-radius: 0;
            font-weight: bold;

            &.btn-back {
            /**
             * background: lighten($secondary, 10%);
             * border: lighten($secondary, 10%);
             */
                color: $primary;
                border: #e9ecef;
                
            }             

             &.btn-faded {
               color: rgba(204, 222, 115, 0.27);
            /**             
             *  border: #e9ecef;                
            */
            }             

            &.btn-next {
                color: $primary;
            /**
             *   text-align: right;
             */
            }
        }
           
}

.footer-container {
     display: flex;
    justify-content: space-between;
}
.btn-back { 
    align-self: stretch;   
}
.btn-next {
    align-self: flex-end;
}
.btn-faded {
    align-self: stretch;
}

/**
 * Text Input (https://github.com/codrops/TextInputEffects/blob/master/css/set1.css#L771)
 */
label {
    margin: 0;
    display: block;
    font-size: 1em;
    color: $gray-600;
    font-weight: 400;
}

.box-input {
    margin: 0 0 1em;
    padding: 1em 0.75em;
    background-color: #f8fafc;
    border: solid 2px $primary;
    border-radius: 4px;
    -webkit-appearance: none;
    box-sizing: border-box;
    width: 100%;
    height: 3em;
    font-size: 1.5em;
    font-weight: 600;
    transition: box-shadow .2s linear, border-color .25s ease-out;

    &:focus {
        background-color: #ffffff;
        outline: none;
        box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.1);
        border: solid 2px darken($primary, 10%);
    }
}
 
/**
 * Horizontal Scroll
 */
.horizontal-scroll {
    // display: flex;
    // flex-wrap: nowrap;
    // overflow-x: auto;
    // -webkit-overflow-scrolling: touch;
    // &::-webkit-scrollbar {
    //     display: none;
    // }
    .card {
        flex: 0 0 auto;
        // max-width: 50%;
        margin: 0 0.75rem;
        box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.1);

        &:focus {
            outline: none;
        }

        &:first-child {
            // margin-left: 3rem;
        }
        &:last-child {
            // margin-right: 0;
        }

        .card-body {
            padding: 1rem;

            &:focus {
                outline: none;
            }
        }
    }
}

.card-columns {
    @include media-breakpoint-only(xs) {
        column-count: 2;
    }
    @include media-breakpoint-only(lg) {
        column-count: 4;
    }
    @include media-breakpoint-only(xl) {
        column-count: 5;
    }
}

footer.footer {
    line-height: 60px;
    background-color: #f5f5f5;
}



/**
 * sahil
 */
.flow-question {
    max-width: 100%;
    height: 100%;
    width: 600px;
    margin: 0 auto;
    padding: 30px 0 30px;
}

.flow-question-header {
    margin-bottom: 35px;
}

.flow-question-header-title {
    color: #21303d;
    font-size: 22px;
    line-height: 29px;
    letter-spacing: 1.1px;
    margin-bottom: 8px;
    font-weight: 800;
}

a.disabled {
    color: rgba(204, 222, 115, 0.27);
   pointer-events: none;
   cursor: default;
}


.option-style {
    font-size: 1.46em;    
    color: black;
}

.description-style {
    color: blue;
    font-style: italic;
    font-size: .6em;
}

.help-style {
    color: blue;
    font-style: italic;
    font-size: .9em;
}


/* The checkbox-container */
.checkbox-container {
    display: block;
    position: relative;
    padding-left: 35px;
    margin-bottom: 12px;
    cursor: pointer;
    font-size: 22px;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

/* Hide the browser's default checkbox */
.checkbox-container input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
}

/* Create a custom checkbox */
.checkmark {
    position: absolute;
    top: 8px;
    left: 0;
    height: 25px;
    width: 25px;    
    border: 1px solid #ccc!important;
}

/* When the checkbox is checked, add a blue background */
.checkbox-container input:checked ~ .checkmark {
    background-color: #77254B;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
    content: "";
    position: absolute;
    display: none;
}

/* Show the checkmark when checked */
.checkbox-container input:checked ~ .checkmark:after {
    display: block;
}

.black-color {
    color: black !important;
}

.grey-color {
    color: grey !important;
}